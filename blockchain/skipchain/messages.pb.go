// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messages.proto

package skipchain

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	blockchain "go.dedis.ch/fabric/blockchain"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BlockProto struct {
	Index                uint64               `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Height               uint32               `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	BaseHeight           uint32               `protobuf:"varint,3,opt,name=baseHeight,proto3" json:"baseHeight,omitempty"`
	MaximumHeight        uint32               `protobuf:"varint,4,opt,name=maximumHeight,proto3" json:"maximumHeight,omitempty"`
	GenesisID            []byte               `protobuf:"bytes,5,opt,name=genesisID,proto3" json:"genesisID,omitempty"`
	DataHash             []byte               `protobuf:"bytes,6,opt,name=dataHash,proto3" json:"dataHash,omitempty"`
	Payload              *any.Any             `protobuf:"bytes,7,opt,name=payload,proto3" json:"payload,omitempty"`
	Conodes              []*blockchain.Conode `protobuf:"bytes,8,rep,name=conodes,proto3" json:"conodes,omitempty"`
	Backlinks            [][]byte             `protobuf:"bytes,9,rep,name=backlinks,proto3" json:"backlinks,omitempty"`
	Seals                []*any.Any           `protobuf:"bytes,10,rep,name=seals,proto3" json:"seals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *BlockProto) Reset()         { *m = BlockProto{} }
func (m *BlockProto) String() string { return proto.CompactTextString(m) }
func (*BlockProto) ProtoMessage()    {}
func (*BlockProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{0}
}

func (m *BlockProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockProto.Unmarshal(m, b)
}
func (m *BlockProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockProto.Marshal(b, m, deterministic)
}
func (m *BlockProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockProto.Merge(m, src)
}
func (m *BlockProto) XXX_Size() int {
	return xxx_messageInfo_BlockProto.Size(m)
}
func (m *BlockProto) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockProto.DiscardUnknown(m)
}

var xxx_messageInfo_BlockProto proto.InternalMessageInfo

func (m *BlockProto) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *BlockProto) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *BlockProto) GetBaseHeight() uint32 {
	if m != nil {
		return m.BaseHeight
	}
	return 0
}

func (m *BlockProto) GetMaximumHeight() uint32 {
	if m != nil {
		return m.MaximumHeight
	}
	return 0
}

func (m *BlockProto) GetGenesisID() []byte {
	if m != nil {
		return m.GenesisID
	}
	return nil
}

func (m *BlockProto) GetDataHash() []byte {
	if m != nil {
		return m.DataHash
	}
	return nil
}

func (m *BlockProto) GetPayload() *any.Any {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *BlockProto) GetConodes() []*blockchain.Conode {
	if m != nil {
		return m.Conodes
	}
	return nil
}

func (m *BlockProto) GetBacklinks() [][]byte {
	if m != nil {
		return m.Backlinks
	}
	return nil
}

func (m *BlockProto) GetSeals() []*any.Any {
	if m != nil {
		return m.Seals
	}
	return nil
}

type ChainProto struct {
	Block                *BlockProto `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	Seals                []*any.Any  `protobuf:"bytes,2,rep,name=seals,proto3" json:"seals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ChainProto) Reset()         { *m = ChainProto{} }
func (m *ChainProto) String() string { return proto.CompactTextString(m) }
func (*ChainProto) ProtoMessage()    {}
func (*ChainProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{1}
}

func (m *ChainProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChainProto.Unmarshal(m, b)
}
func (m *ChainProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChainProto.Marshal(b, m, deterministic)
}
func (m *ChainProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChainProto.Merge(m, src)
}
func (m *ChainProto) XXX_Size() int {
	return xxx_messageInfo_ChainProto.Size(m)
}
func (m *ChainProto) XXX_DiscardUnknown() {
	xxx_messageInfo_ChainProto.DiscardUnknown(m)
}

var xxx_messageInfo_ChainProto proto.InternalMessageInfo

func (m *ChainProto) GetBlock() *BlockProto {
	if m != nil {
		return m.Block
	}
	return nil
}

func (m *ChainProto) GetSeals() []*any.Any {
	if m != nil {
		return m.Seals
	}
	return nil
}

type PropagateGenesis struct {
	Genesis              *BlockProto `protobuf:"bytes,1,opt,name=genesis,proto3" json:"genesis,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PropagateGenesis) Reset()         { *m = PropagateGenesis{} }
func (m *PropagateGenesis) String() string { return proto.CompactTextString(m) }
func (*PropagateGenesis) ProtoMessage()    {}
func (*PropagateGenesis) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{2}
}

func (m *PropagateGenesis) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PropagateGenesis.Unmarshal(m, b)
}
func (m *PropagateGenesis) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PropagateGenesis.Marshal(b, m, deterministic)
}
func (m *PropagateGenesis) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PropagateGenesis.Merge(m, src)
}
func (m *PropagateGenesis) XXX_Size() int {
	return xxx_messageInfo_PropagateGenesis.Size(m)
}
func (m *PropagateGenesis) XXX_DiscardUnknown() {
	xxx_messageInfo_PropagateGenesis.DiscardUnknown(m)
}

var xxx_messageInfo_PropagateGenesis proto.InternalMessageInfo

func (m *PropagateGenesis) GetGenesis() *BlockProto {
	if m != nil {
		return m.Genesis
	}
	return nil
}

type PropagateSeal struct {
	Seal                 *any.Any `protobuf:"bytes,1,opt,name=seal,proto3" json:"seal,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PropagateSeal) Reset()         { *m = PropagateSeal{} }
func (m *PropagateSeal) String() string { return proto.CompactTextString(m) }
func (*PropagateSeal) ProtoMessage()    {}
func (*PropagateSeal) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{3}
}

func (m *PropagateSeal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PropagateSeal.Unmarshal(m, b)
}
func (m *PropagateSeal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PropagateSeal.Marshal(b, m, deterministic)
}
func (m *PropagateSeal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PropagateSeal.Merge(m, src)
}
func (m *PropagateSeal) XXX_Size() int {
	return xxx_messageInfo_PropagateSeal.Size(m)
}
func (m *PropagateSeal) XXX_DiscardUnknown() {
	xxx_messageInfo_PropagateSeal.DiscardUnknown(m)
}

var xxx_messageInfo_PropagateSeal proto.InternalMessageInfo

func (m *PropagateSeal) GetSeal() *any.Any {
	if m != nil {
		return m.Seal
	}
	return nil
}

func init() {
	proto.RegisterType((*BlockProto)(nil), "skipchain.BlockProto")
	proto.RegisterType((*ChainProto)(nil), "skipchain.ChainProto")
	proto.RegisterType((*PropagateGenesis)(nil), "skipchain.PropagateGenesis")
	proto.RegisterType((*PropagateSeal)(nil), "skipchain.PropagateSeal")
}

func init() { proto.RegisterFile("messages.proto", fileDescriptor_4dc296cbfe5ffcd5) }

var fileDescriptor_4dc296cbfe5ffcd5 = []byte{
	// 363 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x91, 0x5f, 0x6b, 0xe2, 0x40,
	0x14, 0xc5, 0x89, 0x1a, 0xa3, 0xd7, 0x75, 0x59, 0x06, 0x77, 0x19, 0x65, 0x59, 0x82, 0xec, 0x43,
	0xd8, 0x2d, 0x13, 0xb0, 0x4f, 0x7d, 0x6c, 0x2d, 0xd4, 0xbe, 0x49, 0xfa, 0x09, 0x6e, 0x92, 0x69,
	0x12, 0xf2, 0x67, 0x82, 0x13, 0x41, 0xbf, 0x6e, 0x3f, 0x49, 0xc9, 0x4c, 0xfe, 0x54, 0x90, 0xf6,
	0xf1, 0xde, 0xf3, 0x9b, 0x73, 0x2e, 0x67, 0xe0, 0x7b, 0xce, 0xa5, 0xc4, 0x88, 0x4b, 0x56, 0x1e,
	0x44, 0x25, 0xc8, 0x54, 0xa6, 0x49, 0x19, 0xc4, 0x98, 0x14, 0xab, 0x65, 0x24, 0x44, 0x94, 0x71,
	0x57, 0x09, 0xfe, 0xf1, 0xd5, 0xc5, 0xe2, 0xac, 0xa9, 0xd5, 0xd2, 0xcf, 0x44, 0x90, 0x2a, 0xcc,
	0xbd, 0x34, 0x58, 0xbf, 0x0d, 0x00, 0x1e, 0x6a, 0x75, 0xaf, 0xfc, 0x16, 0x60, 0x26, 0x45, 0xc8,
	0x4f, 0xd4, 0xb0, 0x0d, 0x67, 0xe4, 0xe9, 0x81, 0xfc, 0x82, 0x71, 0xcc, 0x93, 0x28, 0xae, 0xe8,
	0xc0, 0x36, 0x9c, 0xb9, 0xd7, 0x4c, 0xe4, 0x0f, 0x80, 0x8f, 0x92, 0xef, 0xb4, 0x36, 0x54, 0xda,
	0x87, 0x0d, 0xf9, 0x0b, 0xf3, 0x1c, 0x4f, 0x49, 0x7e, 0xcc, 0x1b, 0x64, 0xa4, 0x90, 0xcb, 0x25,
	0xf9, 0x0d, 0xd3, 0x88, 0x17, 0x5c, 0x26, 0xf2, 0xf9, 0x91, 0x9a, 0xb6, 0xe1, 0x7c, 0xf3, 0xfa,
	0x05, 0x59, 0xc1, 0x24, 0xc4, 0x0a, 0x77, 0x28, 0x63, 0x3a, 0x56, 0x62, 0x37, 0x13, 0x06, 0x56,
	0x89, 0xe7, 0x4c, 0x60, 0x48, 0x2d, 0xdb, 0x70, 0x66, 0x9b, 0x05, 0xd3, 0x25, 0xb0, 0xb6, 0x04,
	0x76, 0x5f, 0x9c, 0xbd, 0x16, 0x22, 0x37, 0x60, 0x05, 0xa2, 0x10, 0x21, 0x97, 0x74, 0x62, 0x0f,
	0x9d, 0xd9, 0x86, 0xb0, 0xbe, 0x19, 0xb6, 0x55, 0x92, 0xd7, 0x22, 0xf5, 0x5d, 0x3e, 0x06, 0x69,
	0x96, 0x14, 0xa9, 0xa4, 0x53, 0x7b, 0x58, 0xdf, 0xd5, 0x2d, 0xc8, 0x3f, 0x30, 0x25, 0xc7, 0x4c,
	0x52, 0x50, 0x4e, 0xd7, 0x93, 0x35, 0xb2, 0xe6, 0x00, 0xdb, 0x3a, 0x42, 0x77, 0xfc, 0x1f, 0x4c,
	0x95, 0xaa, 0x3a, 0x9e, 0x6d, 0x7e, 0xb2, 0xee, 0x0f, 0x59, 0xff, 0x13, 0x9e, 0x66, 0xfa, 0x98,
	0xc1, 0xd7, 0x31, 0x5b, 0xf8, 0xb1, 0x3f, 0x88, 0x12, 0x23, 0xac, 0xf8, 0x93, 0x2e, 0x90, 0xb8,
	0x60, 0x35, 0x5d, 0x7e, 0x1e, 0xd7, 0x52, 0xeb, 0x3b, 0x98, 0x77, 0x26, 0x2f, 0x1c, 0x33, 0xe2,
	0xc0, 0xa8, 0xb6, 0x6f, 0x9e, 0x5f, 0x3f, 0x40, 0x11, 0xfe, 0x58, 0xed, 0x6e, 0xdf, 0x03, 0x00,
	0x00, 0xff, 0xff, 0xdc, 0x71, 0x3b, 0x7c, 0xa5, 0x02, 0x00, 0x00,
}
